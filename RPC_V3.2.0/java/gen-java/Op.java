/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2024-01-19")
public class Op implements org.apache.thrift.TBase<Op, Op._Fields>, java.io.Serializable, Cloneable, Comparable<Op> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Op");

  private static final org.apache.thrift.protocol.TField TIME_OR_DIST_1_FIELD_DESC = new org.apache.thrift.protocol.TField("time_or_dist_1", org.apache.thrift.protocol.TType.BYTE, (short)1);
  private static final org.apache.thrift.protocol.TField TRIG_IO_1_FIELD_DESC = new org.apache.thrift.protocol.TField("trig_io_1", org.apache.thrift.protocol.TType.BYTE, (short)2);
  private static final org.apache.thrift.protocol.TField TRIG_VALUE_1_FIELD_DESC = new org.apache.thrift.protocol.TField("trig_value_1", org.apache.thrift.protocol.TType.BOOL, (short)3);
  private static final org.apache.thrift.protocol.TField TRIG_TIME_1_FIELD_DESC = new org.apache.thrift.protocol.TField("trig_time_1", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField TRIG_DIST_1_FIELD_DESC = new org.apache.thrift.protocol.TField("trig_dist_1", org.apache.thrift.protocol.TType.DOUBLE, (short)5);
  private static final org.apache.thrift.protocol.TField TRIG_EVENT_1_FIELD_DESC = new org.apache.thrift.protocol.TField("trig_event_1", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField TIME_OR_DIST_2_FIELD_DESC = new org.apache.thrift.protocol.TField("time_or_dist_2", org.apache.thrift.protocol.TType.BYTE, (short)7);
  private static final org.apache.thrift.protocol.TField TRIG_IO_2_FIELD_DESC = new org.apache.thrift.protocol.TField("trig_io_2", org.apache.thrift.protocol.TType.BYTE, (short)8);
  private static final org.apache.thrift.protocol.TField TRIG_VALUE_2_FIELD_DESC = new org.apache.thrift.protocol.TField("trig_value_2", org.apache.thrift.protocol.TType.BOOL, (short)9);
  private static final org.apache.thrift.protocol.TField TRIG_TIME_2_FIELD_DESC = new org.apache.thrift.protocol.TField("trig_time_2", org.apache.thrift.protocol.TType.DOUBLE, (short)10);
  private static final org.apache.thrift.protocol.TField TRIG_DIST_2_FIELD_DESC = new org.apache.thrift.protocol.TField("trig_dist_2", org.apache.thrift.protocol.TType.DOUBLE, (short)11);
  private static final org.apache.thrift.protocol.TField TRIG_EVENT_2_FIELD_DESC = new org.apache.thrift.protocol.TField("trig_event_2", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new OpStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new OpTupleSchemeFactory();

  public byte time_or_dist_1; // required
  public byte trig_io_1; // required
  public boolean trig_value_1; // required
  public double trig_time_1; // required
  public double trig_dist_1; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String trig_event_1; // required
  public byte time_or_dist_2; // required
  public byte trig_io_2; // required
  public boolean trig_value_2; // required
  public double trig_time_2; // required
  public double trig_dist_2; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String trig_event_2; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TIME_OR_DIST_1((short)1, "time_or_dist_1"),
    TRIG_IO_1((short)2, "trig_io_1"),
    TRIG_VALUE_1((short)3, "trig_value_1"),
    TRIG_TIME_1((short)4, "trig_time_1"),
    TRIG_DIST_1((short)5, "trig_dist_1"),
    TRIG_EVENT_1((short)6, "trig_event_1"),
    TIME_OR_DIST_2((short)7, "time_or_dist_2"),
    TRIG_IO_2((short)8, "trig_io_2"),
    TRIG_VALUE_2((short)9, "trig_value_2"),
    TRIG_TIME_2((short)10, "trig_time_2"),
    TRIG_DIST_2((short)11, "trig_dist_2"),
    TRIG_EVENT_2((short)12, "trig_event_2");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TIME_OR_DIST_1
          return TIME_OR_DIST_1;
        case 2: // TRIG_IO_1
          return TRIG_IO_1;
        case 3: // TRIG_VALUE_1
          return TRIG_VALUE_1;
        case 4: // TRIG_TIME_1
          return TRIG_TIME_1;
        case 5: // TRIG_DIST_1
          return TRIG_DIST_1;
        case 6: // TRIG_EVENT_1
          return TRIG_EVENT_1;
        case 7: // TIME_OR_DIST_2
          return TIME_OR_DIST_2;
        case 8: // TRIG_IO_2
          return TRIG_IO_2;
        case 9: // TRIG_VALUE_2
          return TRIG_VALUE_2;
        case 10: // TRIG_TIME_2
          return TRIG_TIME_2;
        case 11: // TRIG_DIST_2
          return TRIG_DIST_2;
        case 12: // TRIG_EVENT_2
          return TRIG_EVENT_2;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TIME_OR_DIST_1_ISSET_ID = 0;
  private static final int __TRIG_IO_1_ISSET_ID = 1;
  private static final int __TRIG_VALUE_1_ISSET_ID = 2;
  private static final int __TRIG_TIME_1_ISSET_ID = 3;
  private static final int __TRIG_DIST_1_ISSET_ID = 4;
  private static final int __TIME_OR_DIST_2_ISSET_ID = 5;
  private static final int __TRIG_IO_2_ISSET_ID = 6;
  private static final int __TRIG_VALUE_2_ISSET_ID = 7;
  private static final int __TRIG_TIME_2_ISSET_ID = 8;
  private static final int __TRIG_DIST_2_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TIME_OR_DIST_1, new org.apache.thrift.meta_data.FieldMetaData("time_or_dist_1", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.TRIG_IO_1, new org.apache.thrift.meta_data.FieldMetaData("trig_io_1", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.TRIG_VALUE_1, new org.apache.thrift.meta_data.FieldMetaData("trig_value_1", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.TRIG_TIME_1, new org.apache.thrift.meta_data.FieldMetaData("trig_time_1", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TRIG_DIST_1, new org.apache.thrift.meta_data.FieldMetaData("trig_dist_1", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TRIG_EVENT_1, new org.apache.thrift.meta_data.FieldMetaData("trig_event_1", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TIME_OR_DIST_2, new org.apache.thrift.meta_data.FieldMetaData("time_or_dist_2", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.TRIG_IO_2, new org.apache.thrift.meta_data.FieldMetaData("trig_io_2", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.TRIG_VALUE_2, new org.apache.thrift.meta_data.FieldMetaData("trig_value_2", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.TRIG_TIME_2, new org.apache.thrift.meta_data.FieldMetaData("trig_time_2", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TRIG_DIST_2, new org.apache.thrift.meta_data.FieldMetaData("trig_dist_2", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TRIG_EVENT_2, new org.apache.thrift.meta_data.FieldMetaData("trig_event_2", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Op.class, metaDataMap);
  }

  public Op() {
  }

  public Op(
    byte time_or_dist_1,
    byte trig_io_1,
    boolean trig_value_1,
    double trig_time_1,
    double trig_dist_1,
    java.lang.String trig_event_1,
    byte time_or_dist_2,
    byte trig_io_2,
    boolean trig_value_2,
    double trig_time_2,
    double trig_dist_2,
    java.lang.String trig_event_2)
  {
    this();
    this.time_or_dist_1 = time_or_dist_1;
    setTime_or_dist_1IsSet(true);
    this.trig_io_1 = trig_io_1;
    setTrig_io_1IsSet(true);
    this.trig_value_1 = trig_value_1;
    setTrig_value_1IsSet(true);
    this.trig_time_1 = trig_time_1;
    setTrig_time_1IsSet(true);
    this.trig_dist_1 = trig_dist_1;
    setTrig_dist_1IsSet(true);
    this.trig_event_1 = trig_event_1;
    this.time_or_dist_2 = time_or_dist_2;
    setTime_or_dist_2IsSet(true);
    this.trig_io_2 = trig_io_2;
    setTrig_io_2IsSet(true);
    this.trig_value_2 = trig_value_2;
    setTrig_value_2IsSet(true);
    this.trig_time_2 = trig_time_2;
    setTrig_time_2IsSet(true);
    this.trig_dist_2 = trig_dist_2;
    setTrig_dist_2IsSet(true);
    this.trig_event_2 = trig_event_2;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Op(Op other) {
    __isset_bitfield = other.__isset_bitfield;
    this.time_or_dist_1 = other.time_or_dist_1;
    this.trig_io_1 = other.trig_io_1;
    this.trig_value_1 = other.trig_value_1;
    this.trig_time_1 = other.trig_time_1;
    this.trig_dist_1 = other.trig_dist_1;
    if (other.isSetTrig_event_1()) {
      this.trig_event_1 = other.trig_event_1;
    }
    this.time_or_dist_2 = other.time_or_dist_2;
    this.trig_io_2 = other.trig_io_2;
    this.trig_value_2 = other.trig_value_2;
    this.trig_time_2 = other.trig_time_2;
    this.trig_dist_2 = other.trig_dist_2;
    if (other.isSetTrig_event_2()) {
      this.trig_event_2 = other.trig_event_2;
    }
  }

  public Op deepCopy() {
    return new Op(this);
  }

  @Override
  public void clear() {
    setTime_or_dist_1IsSet(false);
    this.time_or_dist_1 = 0;
    setTrig_io_1IsSet(false);
    this.trig_io_1 = 0;
    setTrig_value_1IsSet(false);
    this.trig_value_1 = false;
    setTrig_time_1IsSet(false);
    this.trig_time_1 = 0.0;
    setTrig_dist_1IsSet(false);
    this.trig_dist_1 = 0.0;
    this.trig_event_1 = null;
    setTime_or_dist_2IsSet(false);
    this.time_or_dist_2 = 0;
    setTrig_io_2IsSet(false);
    this.trig_io_2 = 0;
    setTrig_value_2IsSet(false);
    this.trig_value_2 = false;
    setTrig_time_2IsSet(false);
    this.trig_time_2 = 0.0;
    setTrig_dist_2IsSet(false);
    this.trig_dist_2 = 0.0;
    this.trig_event_2 = null;
  }

  public byte getTime_or_dist_1() {
    return this.time_or_dist_1;
  }

  public Op setTime_or_dist_1(byte time_or_dist_1) {
    this.time_or_dist_1 = time_or_dist_1;
    setTime_or_dist_1IsSet(true);
    return this;
  }

  public void unsetTime_or_dist_1() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TIME_OR_DIST_1_ISSET_ID);
  }

  /** Returns true if field time_or_dist_1 is set (has been assigned a value) and false otherwise */
  public boolean isSetTime_or_dist_1() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TIME_OR_DIST_1_ISSET_ID);
  }

  public void setTime_or_dist_1IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TIME_OR_DIST_1_ISSET_ID, value);
  }

  public byte getTrig_io_1() {
    return this.trig_io_1;
  }

  public Op setTrig_io_1(byte trig_io_1) {
    this.trig_io_1 = trig_io_1;
    setTrig_io_1IsSet(true);
    return this;
  }

  public void unsetTrig_io_1() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TRIG_IO_1_ISSET_ID);
  }

  /** Returns true if field trig_io_1 is set (has been assigned a value) and false otherwise */
  public boolean isSetTrig_io_1() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TRIG_IO_1_ISSET_ID);
  }

  public void setTrig_io_1IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TRIG_IO_1_ISSET_ID, value);
  }

  public boolean isTrig_value_1() {
    return this.trig_value_1;
  }

  public Op setTrig_value_1(boolean trig_value_1) {
    this.trig_value_1 = trig_value_1;
    setTrig_value_1IsSet(true);
    return this;
  }

  public void unsetTrig_value_1() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TRIG_VALUE_1_ISSET_ID);
  }

  /** Returns true if field trig_value_1 is set (has been assigned a value) and false otherwise */
  public boolean isSetTrig_value_1() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TRIG_VALUE_1_ISSET_ID);
  }

  public void setTrig_value_1IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TRIG_VALUE_1_ISSET_ID, value);
  }

  public double getTrig_time_1() {
    return this.trig_time_1;
  }

  public Op setTrig_time_1(double trig_time_1) {
    this.trig_time_1 = trig_time_1;
    setTrig_time_1IsSet(true);
    return this;
  }

  public void unsetTrig_time_1() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TRIG_TIME_1_ISSET_ID);
  }

  /** Returns true if field trig_time_1 is set (has been assigned a value) and false otherwise */
  public boolean isSetTrig_time_1() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TRIG_TIME_1_ISSET_ID);
  }

  public void setTrig_time_1IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TRIG_TIME_1_ISSET_ID, value);
  }

  public double getTrig_dist_1() {
    return this.trig_dist_1;
  }

  public Op setTrig_dist_1(double trig_dist_1) {
    this.trig_dist_1 = trig_dist_1;
    setTrig_dist_1IsSet(true);
    return this;
  }

  public void unsetTrig_dist_1() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TRIG_DIST_1_ISSET_ID);
  }

  /** Returns true if field trig_dist_1 is set (has been assigned a value) and false otherwise */
  public boolean isSetTrig_dist_1() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TRIG_DIST_1_ISSET_ID);
  }

  public void setTrig_dist_1IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TRIG_DIST_1_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTrig_event_1() {
    return this.trig_event_1;
  }

  public Op setTrig_event_1(@org.apache.thrift.annotation.Nullable java.lang.String trig_event_1) {
    this.trig_event_1 = trig_event_1;
    return this;
  }

  public void unsetTrig_event_1() {
    this.trig_event_1 = null;
  }

  /** Returns true if field trig_event_1 is set (has been assigned a value) and false otherwise */
  public boolean isSetTrig_event_1() {
    return this.trig_event_1 != null;
  }

  public void setTrig_event_1IsSet(boolean value) {
    if (!value) {
      this.trig_event_1 = null;
    }
  }

  public byte getTime_or_dist_2() {
    return this.time_or_dist_2;
  }

  public Op setTime_or_dist_2(byte time_or_dist_2) {
    this.time_or_dist_2 = time_or_dist_2;
    setTime_or_dist_2IsSet(true);
    return this;
  }

  public void unsetTime_or_dist_2() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TIME_OR_DIST_2_ISSET_ID);
  }

  /** Returns true if field time_or_dist_2 is set (has been assigned a value) and false otherwise */
  public boolean isSetTime_or_dist_2() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TIME_OR_DIST_2_ISSET_ID);
  }

  public void setTime_or_dist_2IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TIME_OR_DIST_2_ISSET_ID, value);
  }

  public byte getTrig_io_2() {
    return this.trig_io_2;
  }

  public Op setTrig_io_2(byte trig_io_2) {
    this.trig_io_2 = trig_io_2;
    setTrig_io_2IsSet(true);
    return this;
  }

  public void unsetTrig_io_2() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TRIG_IO_2_ISSET_ID);
  }

  /** Returns true if field trig_io_2 is set (has been assigned a value) and false otherwise */
  public boolean isSetTrig_io_2() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TRIG_IO_2_ISSET_ID);
  }

  public void setTrig_io_2IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TRIG_IO_2_ISSET_ID, value);
  }

  public boolean isTrig_value_2() {
    return this.trig_value_2;
  }

  public Op setTrig_value_2(boolean trig_value_2) {
    this.trig_value_2 = trig_value_2;
    setTrig_value_2IsSet(true);
    return this;
  }

  public void unsetTrig_value_2() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TRIG_VALUE_2_ISSET_ID);
  }

  /** Returns true if field trig_value_2 is set (has been assigned a value) and false otherwise */
  public boolean isSetTrig_value_2() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TRIG_VALUE_2_ISSET_ID);
  }

  public void setTrig_value_2IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TRIG_VALUE_2_ISSET_ID, value);
  }

  public double getTrig_time_2() {
    return this.trig_time_2;
  }

  public Op setTrig_time_2(double trig_time_2) {
    this.trig_time_2 = trig_time_2;
    setTrig_time_2IsSet(true);
    return this;
  }

  public void unsetTrig_time_2() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TRIG_TIME_2_ISSET_ID);
  }

  /** Returns true if field trig_time_2 is set (has been assigned a value) and false otherwise */
  public boolean isSetTrig_time_2() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TRIG_TIME_2_ISSET_ID);
  }

  public void setTrig_time_2IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TRIG_TIME_2_ISSET_ID, value);
  }

  public double getTrig_dist_2() {
    return this.trig_dist_2;
  }

  public Op setTrig_dist_2(double trig_dist_2) {
    this.trig_dist_2 = trig_dist_2;
    setTrig_dist_2IsSet(true);
    return this;
  }

  public void unsetTrig_dist_2() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TRIG_DIST_2_ISSET_ID);
  }

  /** Returns true if field trig_dist_2 is set (has been assigned a value) and false otherwise */
  public boolean isSetTrig_dist_2() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TRIG_DIST_2_ISSET_ID);
  }

  public void setTrig_dist_2IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TRIG_DIST_2_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getTrig_event_2() {
    return this.trig_event_2;
  }

  public Op setTrig_event_2(@org.apache.thrift.annotation.Nullable java.lang.String trig_event_2) {
    this.trig_event_2 = trig_event_2;
    return this;
  }

  public void unsetTrig_event_2() {
    this.trig_event_2 = null;
  }

  /** Returns true if field trig_event_2 is set (has been assigned a value) and false otherwise */
  public boolean isSetTrig_event_2() {
    return this.trig_event_2 != null;
  }

  public void setTrig_event_2IsSet(boolean value) {
    if (!value) {
      this.trig_event_2 = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case TIME_OR_DIST_1:
      if (value == null) {
        unsetTime_or_dist_1();
      } else {
        setTime_or_dist_1((java.lang.Byte)value);
      }
      break;

    case TRIG_IO_1:
      if (value == null) {
        unsetTrig_io_1();
      } else {
        setTrig_io_1((java.lang.Byte)value);
      }
      break;

    case TRIG_VALUE_1:
      if (value == null) {
        unsetTrig_value_1();
      } else {
        setTrig_value_1((java.lang.Boolean)value);
      }
      break;

    case TRIG_TIME_1:
      if (value == null) {
        unsetTrig_time_1();
      } else {
        setTrig_time_1((java.lang.Double)value);
      }
      break;

    case TRIG_DIST_1:
      if (value == null) {
        unsetTrig_dist_1();
      } else {
        setTrig_dist_1((java.lang.Double)value);
      }
      break;

    case TRIG_EVENT_1:
      if (value == null) {
        unsetTrig_event_1();
      } else {
        setTrig_event_1((java.lang.String)value);
      }
      break;

    case TIME_OR_DIST_2:
      if (value == null) {
        unsetTime_or_dist_2();
      } else {
        setTime_or_dist_2((java.lang.Byte)value);
      }
      break;

    case TRIG_IO_2:
      if (value == null) {
        unsetTrig_io_2();
      } else {
        setTrig_io_2((java.lang.Byte)value);
      }
      break;

    case TRIG_VALUE_2:
      if (value == null) {
        unsetTrig_value_2();
      } else {
        setTrig_value_2((java.lang.Boolean)value);
      }
      break;

    case TRIG_TIME_2:
      if (value == null) {
        unsetTrig_time_2();
      } else {
        setTrig_time_2((java.lang.Double)value);
      }
      break;

    case TRIG_DIST_2:
      if (value == null) {
        unsetTrig_dist_2();
      } else {
        setTrig_dist_2((java.lang.Double)value);
      }
      break;

    case TRIG_EVENT_2:
      if (value == null) {
        unsetTrig_event_2();
      } else {
        setTrig_event_2((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case TIME_OR_DIST_1:
      return getTime_or_dist_1();

    case TRIG_IO_1:
      return getTrig_io_1();

    case TRIG_VALUE_1:
      return isTrig_value_1();

    case TRIG_TIME_1:
      return getTrig_time_1();

    case TRIG_DIST_1:
      return getTrig_dist_1();

    case TRIG_EVENT_1:
      return getTrig_event_1();

    case TIME_OR_DIST_2:
      return getTime_or_dist_2();

    case TRIG_IO_2:
      return getTrig_io_2();

    case TRIG_VALUE_2:
      return isTrig_value_2();

    case TRIG_TIME_2:
      return getTrig_time_2();

    case TRIG_DIST_2:
      return getTrig_dist_2();

    case TRIG_EVENT_2:
      return getTrig_event_2();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case TIME_OR_DIST_1:
      return isSetTime_or_dist_1();
    case TRIG_IO_1:
      return isSetTrig_io_1();
    case TRIG_VALUE_1:
      return isSetTrig_value_1();
    case TRIG_TIME_1:
      return isSetTrig_time_1();
    case TRIG_DIST_1:
      return isSetTrig_dist_1();
    case TRIG_EVENT_1:
      return isSetTrig_event_1();
    case TIME_OR_DIST_2:
      return isSetTime_or_dist_2();
    case TRIG_IO_2:
      return isSetTrig_io_2();
    case TRIG_VALUE_2:
      return isSetTrig_value_2();
    case TRIG_TIME_2:
      return isSetTrig_time_2();
    case TRIG_DIST_2:
      return isSetTrig_dist_2();
    case TRIG_EVENT_2:
      return isSetTrig_event_2();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Op)
      return this.equals((Op)that);
    return false;
  }

  public boolean equals(Op that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_time_or_dist_1 = true;
    boolean that_present_time_or_dist_1 = true;
    if (this_present_time_or_dist_1 || that_present_time_or_dist_1) {
      if (!(this_present_time_or_dist_1 && that_present_time_or_dist_1))
        return false;
      if (this.time_or_dist_1 != that.time_or_dist_1)
        return false;
    }

    boolean this_present_trig_io_1 = true;
    boolean that_present_trig_io_1 = true;
    if (this_present_trig_io_1 || that_present_trig_io_1) {
      if (!(this_present_trig_io_1 && that_present_trig_io_1))
        return false;
      if (this.trig_io_1 != that.trig_io_1)
        return false;
    }

    boolean this_present_trig_value_1 = true;
    boolean that_present_trig_value_1 = true;
    if (this_present_trig_value_1 || that_present_trig_value_1) {
      if (!(this_present_trig_value_1 && that_present_trig_value_1))
        return false;
      if (this.trig_value_1 != that.trig_value_1)
        return false;
    }

    boolean this_present_trig_time_1 = true;
    boolean that_present_trig_time_1 = true;
    if (this_present_trig_time_1 || that_present_trig_time_1) {
      if (!(this_present_trig_time_1 && that_present_trig_time_1))
        return false;
      if (this.trig_time_1 != that.trig_time_1)
        return false;
    }

    boolean this_present_trig_dist_1 = true;
    boolean that_present_trig_dist_1 = true;
    if (this_present_trig_dist_1 || that_present_trig_dist_1) {
      if (!(this_present_trig_dist_1 && that_present_trig_dist_1))
        return false;
      if (this.trig_dist_1 != that.trig_dist_1)
        return false;
    }

    boolean this_present_trig_event_1 = true && this.isSetTrig_event_1();
    boolean that_present_trig_event_1 = true && that.isSetTrig_event_1();
    if (this_present_trig_event_1 || that_present_trig_event_1) {
      if (!(this_present_trig_event_1 && that_present_trig_event_1))
        return false;
      if (!this.trig_event_1.equals(that.trig_event_1))
        return false;
    }

    boolean this_present_time_or_dist_2 = true;
    boolean that_present_time_or_dist_2 = true;
    if (this_present_time_or_dist_2 || that_present_time_or_dist_2) {
      if (!(this_present_time_or_dist_2 && that_present_time_or_dist_2))
        return false;
      if (this.time_or_dist_2 != that.time_or_dist_2)
        return false;
    }

    boolean this_present_trig_io_2 = true;
    boolean that_present_trig_io_2 = true;
    if (this_present_trig_io_2 || that_present_trig_io_2) {
      if (!(this_present_trig_io_2 && that_present_trig_io_2))
        return false;
      if (this.trig_io_2 != that.trig_io_2)
        return false;
    }

    boolean this_present_trig_value_2 = true;
    boolean that_present_trig_value_2 = true;
    if (this_present_trig_value_2 || that_present_trig_value_2) {
      if (!(this_present_trig_value_2 && that_present_trig_value_2))
        return false;
      if (this.trig_value_2 != that.trig_value_2)
        return false;
    }

    boolean this_present_trig_time_2 = true;
    boolean that_present_trig_time_2 = true;
    if (this_present_trig_time_2 || that_present_trig_time_2) {
      if (!(this_present_trig_time_2 && that_present_trig_time_2))
        return false;
      if (this.trig_time_2 != that.trig_time_2)
        return false;
    }

    boolean this_present_trig_dist_2 = true;
    boolean that_present_trig_dist_2 = true;
    if (this_present_trig_dist_2 || that_present_trig_dist_2) {
      if (!(this_present_trig_dist_2 && that_present_trig_dist_2))
        return false;
      if (this.trig_dist_2 != that.trig_dist_2)
        return false;
    }

    boolean this_present_trig_event_2 = true && this.isSetTrig_event_2();
    boolean that_present_trig_event_2 = true && that.isSetTrig_event_2();
    if (this_present_trig_event_2 || that_present_trig_event_2) {
      if (!(this_present_trig_event_2 && that_present_trig_event_2))
        return false;
      if (!this.trig_event_2.equals(that.trig_event_2))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + (int) (time_or_dist_1);

    hashCode = hashCode * 8191 + (int) (trig_io_1);

    hashCode = hashCode * 8191 + ((trig_value_1) ? 131071 : 524287);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(trig_time_1);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(trig_dist_1);

    hashCode = hashCode * 8191 + ((isSetTrig_event_1()) ? 131071 : 524287);
    if (isSetTrig_event_1())
      hashCode = hashCode * 8191 + trig_event_1.hashCode();

    hashCode = hashCode * 8191 + (int) (time_or_dist_2);

    hashCode = hashCode * 8191 + (int) (trig_io_2);

    hashCode = hashCode * 8191 + ((trig_value_2) ? 131071 : 524287);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(trig_time_2);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(trig_dist_2);

    hashCode = hashCode * 8191 + ((isSetTrig_event_2()) ? 131071 : 524287);
    if (isSetTrig_event_2())
      hashCode = hashCode * 8191 + trig_event_2.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Op other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetTime_or_dist_1()).compareTo(other.isSetTime_or_dist_1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTime_or_dist_1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.time_or_dist_1, other.time_or_dist_1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrig_io_1()).compareTo(other.isSetTrig_io_1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrig_io_1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trig_io_1, other.trig_io_1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrig_value_1()).compareTo(other.isSetTrig_value_1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrig_value_1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trig_value_1, other.trig_value_1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrig_time_1()).compareTo(other.isSetTrig_time_1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrig_time_1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trig_time_1, other.trig_time_1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrig_dist_1()).compareTo(other.isSetTrig_dist_1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrig_dist_1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trig_dist_1, other.trig_dist_1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrig_event_1()).compareTo(other.isSetTrig_event_1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrig_event_1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trig_event_1, other.trig_event_1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTime_or_dist_2()).compareTo(other.isSetTime_or_dist_2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTime_or_dist_2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.time_or_dist_2, other.time_or_dist_2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrig_io_2()).compareTo(other.isSetTrig_io_2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrig_io_2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trig_io_2, other.trig_io_2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrig_value_2()).compareTo(other.isSetTrig_value_2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrig_value_2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trig_value_2, other.trig_value_2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrig_time_2()).compareTo(other.isSetTrig_time_2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrig_time_2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trig_time_2, other.trig_time_2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrig_dist_2()).compareTo(other.isSetTrig_dist_2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrig_dist_2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trig_dist_2, other.trig_dist_2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrig_event_2()).compareTo(other.isSetTrig_event_2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrig_event_2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trig_event_2, other.trig_event_2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Op(");
    boolean first = true;

    sb.append("time_or_dist_1:");
    sb.append(this.time_or_dist_1);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trig_io_1:");
    sb.append(this.trig_io_1);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trig_value_1:");
    sb.append(this.trig_value_1);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trig_time_1:");
    sb.append(this.trig_time_1);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trig_dist_1:");
    sb.append(this.trig_dist_1);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trig_event_1:");
    if (this.trig_event_1 == null) {
      sb.append("null");
    } else {
      sb.append(this.trig_event_1);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("time_or_dist_2:");
    sb.append(this.time_or_dist_2);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trig_io_2:");
    sb.append(this.trig_io_2);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trig_value_2:");
    sb.append(this.trig_value_2);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trig_time_2:");
    sb.append(this.trig_time_2);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trig_dist_2:");
    sb.append(this.trig_dist_2);
    first = false;
    if (!first) sb.append(", ");
    sb.append("trig_event_2:");
    if (this.trig_event_2 == null) {
      sb.append("null");
    } else {
      sb.append(this.trig_event_2);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'time_or_dist_1' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'trig_io_1' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'trig_value_1' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'trig_time_1' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'trig_dist_1' because it's a primitive and you chose the non-beans generator.
    if (trig_event_1 == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'trig_event_1' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'time_or_dist_2' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'trig_io_2' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'trig_value_2' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'trig_time_2' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'trig_dist_2' because it's a primitive and you chose the non-beans generator.
    if (trig_event_2 == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'trig_event_2' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OpStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public OpStandardScheme getScheme() {
      return new OpStandardScheme();
    }
  }

  private static class OpStandardScheme extends org.apache.thrift.scheme.StandardScheme<Op> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Op struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TIME_OR_DIST_1
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.time_or_dist_1 = iprot.readByte();
              struct.setTime_or_dist_1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TRIG_IO_1
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.trig_io_1 = iprot.readByte();
              struct.setTrig_io_1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TRIG_VALUE_1
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.trig_value_1 = iprot.readBool();
              struct.setTrig_value_1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TRIG_TIME_1
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.trig_time_1 = iprot.readDouble();
              struct.setTrig_time_1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // TRIG_DIST_1
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.trig_dist_1 = iprot.readDouble();
              struct.setTrig_dist_1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TRIG_EVENT_1
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.trig_event_1 = iprot.readString();
              struct.setTrig_event_1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TIME_OR_DIST_2
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.time_or_dist_2 = iprot.readByte();
              struct.setTime_or_dist_2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // TRIG_IO_2
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.trig_io_2 = iprot.readByte();
              struct.setTrig_io_2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // TRIG_VALUE_2
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.trig_value_2 = iprot.readBool();
              struct.setTrig_value_2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // TRIG_TIME_2
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.trig_time_2 = iprot.readDouble();
              struct.setTrig_time_2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // TRIG_DIST_2
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.trig_dist_2 = iprot.readDouble();
              struct.setTrig_dist_2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // TRIG_EVENT_2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.trig_event_2 = iprot.readString();
              struct.setTrig_event_2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetTime_or_dist_1()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'time_or_dist_1' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTrig_io_1()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'trig_io_1' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTrig_value_1()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'trig_value_1' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTrig_time_1()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'trig_time_1' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTrig_dist_1()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'trig_dist_1' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTime_or_dist_2()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'time_or_dist_2' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTrig_io_2()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'trig_io_2' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTrig_value_2()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'trig_value_2' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTrig_time_2()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'trig_time_2' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetTrig_dist_2()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'trig_dist_2' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Op struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(TIME_OR_DIST_1_FIELD_DESC);
      oprot.writeByte(struct.time_or_dist_1);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TRIG_IO_1_FIELD_DESC);
      oprot.writeByte(struct.trig_io_1);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TRIG_VALUE_1_FIELD_DESC);
      oprot.writeBool(struct.trig_value_1);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TRIG_TIME_1_FIELD_DESC);
      oprot.writeDouble(struct.trig_time_1);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TRIG_DIST_1_FIELD_DESC);
      oprot.writeDouble(struct.trig_dist_1);
      oprot.writeFieldEnd();
      if (struct.trig_event_1 != null) {
        oprot.writeFieldBegin(TRIG_EVENT_1_FIELD_DESC);
        oprot.writeString(struct.trig_event_1);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TIME_OR_DIST_2_FIELD_DESC);
      oprot.writeByte(struct.time_or_dist_2);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TRIG_IO_2_FIELD_DESC);
      oprot.writeByte(struct.trig_io_2);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TRIG_VALUE_2_FIELD_DESC);
      oprot.writeBool(struct.trig_value_2);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TRIG_TIME_2_FIELD_DESC);
      oprot.writeDouble(struct.trig_time_2);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TRIG_DIST_2_FIELD_DESC);
      oprot.writeDouble(struct.trig_dist_2);
      oprot.writeFieldEnd();
      if (struct.trig_event_2 != null) {
        oprot.writeFieldBegin(TRIG_EVENT_2_FIELD_DESC);
        oprot.writeString(struct.trig_event_2);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OpTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public OpTupleScheme getScheme() {
      return new OpTupleScheme();
    }
  }

  private static class OpTupleScheme extends org.apache.thrift.scheme.TupleScheme<Op> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Op struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeByte(struct.time_or_dist_1);
      oprot.writeByte(struct.trig_io_1);
      oprot.writeBool(struct.trig_value_1);
      oprot.writeDouble(struct.trig_time_1);
      oprot.writeDouble(struct.trig_dist_1);
      oprot.writeString(struct.trig_event_1);
      oprot.writeByte(struct.time_or_dist_2);
      oprot.writeByte(struct.trig_io_2);
      oprot.writeBool(struct.trig_value_2);
      oprot.writeDouble(struct.trig_time_2);
      oprot.writeDouble(struct.trig_dist_2);
      oprot.writeString(struct.trig_event_2);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Op struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.time_or_dist_1 = iprot.readByte();
      struct.setTime_or_dist_1IsSet(true);
      struct.trig_io_1 = iprot.readByte();
      struct.setTrig_io_1IsSet(true);
      struct.trig_value_1 = iprot.readBool();
      struct.setTrig_value_1IsSet(true);
      struct.trig_time_1 = iprot.readDouble();
      struct.setTrig_time_1IsSet(true);
      struct.trig_dist_1 = iprot.readDouble();
      struct.setTrig_dist_1IsSet(true);
      struct.trig_event_1 = iprot.readString();
      struct.setTrig_event_1IsSet(true);
      struct.time_or_dist_2 = iprot.readByte();
      struct.setTime_or_dist_2IsSet(true);
      struct.trig_io_2 = iprot.readByte();
      struct.setTrig_io_2IsSet(true);
      struct.trig_value_2 = iprot.readBool();
      struct.setTrig_value_2IsSet(true);
      struct.trig_time_2 = iprot.readDouble();
      struct.setTrig_time_2IsSet(true);
      struct.trig_dist_2 = iprot.readDouble();
      struct.setTrig_dist_2IsSet(true);
      struct.trig_event_2 = iprot.readString();
      struct.setTrig_event_2IsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

