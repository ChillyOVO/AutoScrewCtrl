/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2024-01-19")
public class RealTimeControlData implements org.apache.thrift.TBase<RealTimeControlData, RealTimeControlData._Fields>, java.io.Serializable, Cloneable, Comparable<RealTimeControlData> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RealTimeControlData");

  private static final org.apache.thrift.protocol.TField JOINT_POS_CMD_FIELD_DESC = new org.apache.thrift.protocol.TField("joint_pos_cmd", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField JOINT_VEL_CMD_FIELD_DESC = new org.apache.thrift.protocol.TField("joint_vel_cmd", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField JOINT_TORQ_CMD_FIELD_DESC = new org.apache.thrift.protocol.TField("joint_torq_cmd", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField CART_POS_TOOL_WOBJ_CMD_FIELD_DESC = new org.apache.thrift.protocol.TField("cart_pos_tool_wobj_cmd", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField CART_VEL_TOOL_WOBJ_CMD_FIELD_DESC = new org.apache.thrift.protocol.TField("cart_vel_tool_wobj_cmd", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField CART_FT_CMD_FIELD_DESC = new org.apache.thrift.protocol.TField("cart_ft_cmd", org.apache.thrift.protocol.TType.LIST, (short)6);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.BOOL, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new RealTimeControlDataStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new RealTimeControlDataTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> joint_pos_cmd; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> joint_vel_cmd; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> joint_torq_cmd; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> cart_pos_tool_wobj_cmd; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> cart_vel_tool_wobj_cmd; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> cart_ft_cmd; // required
  public boolean status; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    JOINT_POS_CMD((short)1, "joint_pos_cmd"),
    JOINT_VEL_CMD((short)2, "joint_vel_cmd"),
    JOINT_TORQ_CMD((short)3, "joint_torq_cmd"),
    CART_POS_TOOL_WOBJ_CMD((short)4, "cart_pos_tool_wobj_cmd"),
    CART_VEL_TOOL_WOBJ_CMD((short)5, "cart_vel_tool_wobj_cmd"),
    CART_FT_CMD((short)6, "cart_ft_cmd"),
    STATUS((short)7, "status");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // JOINT_POS_CMD
          return JOINT_POS_CMD;
        case 2: // JOINT_VEL_CMD
          return JOINT_VEL_CMD;
        case 3: // JOINT_TORQ_CMD
          return JOINT_TORQ_CMD;
        case 4: // CART_POS_TOOL_WOBJ_CMD
          return CART_POS_TOOL_WOBJ_CMD;
        case 5: // CART_VEL_TOOL_WOBJ_CMD
          return CART_VEL_TOOL_WOBJ_CMD;
        case 6: // CART_FT_CMD
          return CART_FT_CMD;
        case 7: // STATUS
          return STATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __STATUS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.JOINT_POS_CMD, new org.apache.thrift.meta_data.FieldMetaData("joint_pos_cmd", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE))));
    tmpMap.put(_Fields.JOINT_VEL_CMD, new org.apache.thrift.meta_data.FieldMetaData("joint_vel_cmd", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE))));
    tmpMap.put(_Fields.JOINT_TORQ_CMD, new org.apache.thrift.meta_data.FieldMetaData("joint_torq_cmd", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE))));
    tmpMap.put(_Fields.CART_POS_TOOL_WOBJ_CMD, new org.apache.thrift.meta_data.FieldMetaData("cart_pos_tool_wobj_cmd", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE))));
    tmpMap.put(_Fields.CART_VEL_TOOL_WOBJ_CMD, new org.apache.thrift.meta_data.FieldMetaData("cart_vel_tool_wobj_cmd", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE))));
    tmpMap.put(_Fields.CART_FT_CMD, new org.apache.thrift.meta_data.FieldMetaData("cart_ft_cmd", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE))));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RealTimeControlData.class, metaDataMap);
  }

  public RealTimeControlData() {
  }

  public RealTimeControlData(
    java.util.List<java.lang.Double> joint_pos_cmd,
    java.util.List<java.lang.Double> joint_vel_cmd,
    java.util.List<java.lang.Double> joint_torq_cmd,
    java.util.List<java.lang.Double> cart_pos_tool_wobj_cmd,
    java.util.List<java.lang.Double> cart_vel_tool_wobj_cmd,
    java.util.List<java.lang.Double> cart_ft_cmd,
    boolean status)
  {
    this();
    this.joint_pos_cmd = joint_pos_cmd;
    this.joint_vel_cmd = joint_vel_cmd;
    this.joint_torq_cmd = joint_torq_cmd;
    this.cart_pos_tool_wobj_cmd = cart_pos_tool_wobj_cmd;
    this.cart_vel_tool_wobj_cmd = cart_vel_tool_wobj_cmd;
    this.cart_ft_cmd = cart_ft_cmd;
    this.status = status;
    setStatusIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public RealTimeControlData(RealTimeControlData other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetJoint_pos_cmd()) {
      java.util.List<java.lang.Double> __this__joint_pos_cmd = new java.util.ArrayList<java.lang.Double>(other.joint_pos_cmd);
      this.joint_pos_cmd = __this__joint_pos_cmd;
    }
    if (other.isSetJoint_vel_cmd()) {
      java.util.List<java.lang.Double> __this__joint_vel_cmd = new java.util.ArrayList<java.lang.Double>(other.joint_vel_cmd);
      this.joint_vel_cmd = __this__joint_vel_cmd;
    }
    if (other.isSetJoint_torq_cmd()) {
      java.util.List<java.lang.Double> __this__joint_torq_cmd = new java.util.ArrayList<java.lang.Double>(other.joint_torq_cmd);
      this.joint_torq_cmd = __this__joint_torq_cmd;
    }
    if (other.isSetCart_pos_tool_wobj_cmd()) {
      java.util.List<java.lang.Double> __this__cart_pos_tool_wobj_cmd = new java.util.ArrayList<java.lang.Double>(other.cart_pos_tool_wobj_cmd);
      this.cart_pos_tool_wobj_cmd = __this__cart_pos_tool_wobj_cmd;
    }
    if (other.isSetCart_vel_tool_wobj_cmd()) {
      java.util.List<java.lang.Double> __this__cart_vel_tool_wobj_cmd = new java.util.ArrayList<java.lang.Double>(other.cart_vel_tool_wobj_cmd);
      this.cart_vel_tool_wobj_cmd = __this__cart_vel_tool_wobj_cmd;
    }
    if (other.isSetCart_ft_cmd()) {
      java.util.List<java.lang.Double> __this__cart_ft_cmd = new java.util.ArrayList<java.lang.Double>(other.cart_ft_cmd);
      this.cart_ft_cmd = __this__cart_ft_cmd;
    }
    this.status = other.status;
  }

  public RealTimeControlData deepCopy() {
    return new RealTimeControlData(this);
  }

  @Override
  public void clear() {
    this.joint_pos_cmd = null;
    this.joint_vel_cmd = null;
    this.joint_torq_cmd = null;
    this.cart_pos_tool_wobj_cmd = null;
    this.cart_vel_tool_wobj_cmd = null;
    this.cart_ft_cmd = null;
    setStatusIsSet(false);
    this.status = false;
  }

  public int getJoint_pos_cmdSize() {
    return (this.joint_pos_cmd == null) ? 0 : this.joint_pos_cmd.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Double> getJoint_pos_cmdIterator() {
    return (this.joint_pos_cmd == null) ? null : this.joint_pos_cmd.iterator();
  }

  public void addToJoint_pos_cmd(double elem) {
    if (this.joint_pos_cmd == null) {
      this.joint_pos_cmd = new java.util.ArrayList<java.lang.Double>();
    }
    this.joint_pos_cmd.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Double> getJoint_pos_cmd() {
    return this.joint_pos_cmd;
  }

  public RealTimeControlData setJoint_pos_cmd(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> joint_pos_cmd) {
    this.joint_pos_cmd = joint_pos_cmd;
    return this;
  }

  public void unsetJoint_pos_cmd() {
    this.joint_pos_cmd = null;
  }

  /** Returns true if field joint_pos_cmd is set (has been assigned a value) and false otherwise */
  public boolean isSetJoint_pos_cmd() {
    return this.joint_pos_cmd != null;
  }

  public void setJoint_pos_cmdIsSet(boolean value) {
    if (!value) {
      this.joint_pos_cmd = null;
    }
  }

  public int getJoint_vel_cmdSize() {
    return (this.joint_vel_cmd == null) ? 0 : this.joint_vel_cmd.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Double> getJoint_vel_cmdIterator() {
    return (this.joint_vel_cmd == null) ? null : this.joint_vel_cmd.iterator();
  }

  public void addToJoint_vel_cmd(double elem) {
    if (this.joint_vel_cmd == null) {
      this.joint_vel_cmd = new java.util.ArrayList<java.lang.Double>();
    }
    this.joint_vel_cmd.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Double> getJoint_vel_cmd() {
    return this.joint_vel_cmd;
  }

  public RealTimeControlData setJoint_vel_cmd(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> joint_vel_cmd) {
    this.joint_vel_cmd = joint_vel_cmd;
    return this;
  }

  public void unsetJoint_vel_cmd() {
    this.joint_vel_cmd = null;
  }

  /** Returns true if field joint_vel_cmd is set (has been assigned a value) and false otherwise */
  public boolean isSetJoint_vel_cmd() {
    return this.joint_vel_cmd != null;
  }

  public void setJoint_vel_cmdIsSet(boolean value) {
    if (!value) {
      this.joint_vel_cmd = null;
    }
  }

  public int getJoint_torq_cmdSize() {
    return (this.joint_torq_cmd == null) ? 0 : this.joint_torq_cmd.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Double> getJoint_torq_cmdIterator() {
    return (this.joint_torq_cmd == null) ? null : this.joint_torq_cmd.iterator();
  }

  public void addToJoint_torq_cmd(double elem) {
    if (this.joint_torq_cmd == null) {
      this.joint_torq_cmd = new java.util.ArrayList<java.lang.Double>();
    }
    this.joint_torq_cmd.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Double> getJoint_torq_cmd() {
    return this.joint_torq_cmd;
  }

  public RealTimeControlData setJoint_torq_cmd(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> joint_torq_cmd) {
    this.joint_torq_cmd = joint_torq_cmd;
    return this;
  }

  public void unsetJoint_torq_cmd() {
    this.joint_torq_cmd = null;
  }

  /** Returns true if field joint_torq_cmd is set (has been assigned a value) and false otherwise */
  public boolean isSetJoint_torq_cmd() {
    return this.joint_torq_cmd != null;
  }

  public void setJoint_torq_cmdIsSet(boolean value) {
    if (!value) {
      this.joint_torq_cmd = null;
    }
  }

  public int getCart_pos_tool_wobj_cmdSize() {
    return (this.cart_pos_tool_wobj_cmd == null) ? 0 : this.cart_pos_tool_wobj_cmd.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Double> getCart_pos_tool_wobj_cmdIterator() {
    return (this.cart_pos_tool_wobj_cmd == null) ? null : this.cart_pos_tool_wobj_cmd.iterator();
  }

  public void addToCart_pos_tool_wobj_cmd(double elem) {
    if (this.cart_pos_tool_wobj_cmd == null) {
      this.cart_pos_tool_wobj_cmd = new java.util.ArrayList<java.lang.Double>();
    }
    this.cart_pos_tool_wobj_cmd.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Double> getCart_pos_tool_wobj_cmd() {
    return this.cart_pos_tool_wobj_cmd;
  }

  public RealTimeControlData setCart_pos_tool_wobj_cmd(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> cart_pos_tool_wobj_cmd) {
    this.cart_pos_tool_wobj_cmd = cart_pos_tool_wobj_cmd;
    return this;
  }

  public void unsetCart_pos_tool_wobj_cmd() {
    this.cart_pos_tool_wobj_cmd = null;
  }

  /** Returns true if field cart_pos_tool_wobj_cmd is set (has been assigned a value) and false otherwise */
  public boolean isSetCart_pos_tool_wobj_cmd() {
    return this.cart_pos_tool_wobj_cmd != null;
  }

  public void setCart_pos_tool_wobj_cmdIsSet(boolean value) {
    if (!value) {
      this.cart_pos_tool_wobj_cmd = null;
    }
  }

  public int getCart_vel_tool_wobj_cmdSize() {
    return (this.cart_vel_tool_wobj_cmd == null) ? 0 : this.cart_vel_tool_wobj_cmd.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Double> getCart_vel_tool_wobj_cmdIterator() {
    return (this.cart_vel_tool_wobj_cmd == null) ? null : this.cart_vel_tool_wobj_cmd.iterator();
  }

  public void addToCart_vel_tool_wobj_cmd(double elem) {
    if (this.cart_vel_tool_wobj_cmd == null) {
      this.cart_vel_tool_wobj_cmd = new java.util.ArrayList<java.lang.Double>();
    }
    this.cart_vel_tool_wobj_cmd.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Double> getCart_vel_tool_wobj_cmd() {
    return this.cart_vel_tool_wobj_cmd;
  }

  public RealTimeControlData setCart_vel_tool_wobj_cmd(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> cart_vel_tool_wobj_cmd) {
    this.cart_vel_tool_wobj_cmd = cart_vel_tool_wobj_cmd;
    return this;
  }

  public void unsetCart_vel_tool_wobj_cmd() {
    this.cart_vel_tool_wobj_cmd = null;
  }

  /** Returns true if field cart_vel_tool_wobj_cmd is set (has been assigned a value) and false otherwise */
  public boolean isSetCart_vel_tool_wobj_cmd() {
    return this.cart_vel_tool_wobj_cmd != null;
  }

  public void setCart_vel_tool_wobj_cmdIsSet(boolean value) {
    if (!value) {
      this.cart_vel_tool_wobj_cmd = null;
    }
  }

  public int getCart_ft_cmdSize() {
    return (this.cart_ft_cmd == null) ? 0 : this.cart_ft_cmd.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Double> getCart_ft_cmdIterator() {
    return (this.cart_ft_cmd == null) ? null : this.cart_ft_cmd.iterator();
  }

  public void addToCart_ft_cmd(double elem) {
    if (this.cart_ft_cmd == null) {
      this.cart_ft_cmd = new java.util.ArrayList<java.lang.Double>();
    }
    this.cart_ft_cmd.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Double> getCart_ft_cmd() {
    return this.cart_ft_cmd;
  }

  public RealTimeControlData setCart_ft_cmd(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Double> cart_ft_cmd) {
    this.cart_ft_cmd = cart_ft_cmd;
    return this;
  }

  public void unsetCart_ft_cmd() {
    this.cart_ft_cmd = null;
  }

  /** Returns true if field cart_ft_cmd is set (has been assigned a value) and false otherwise */
  public boolean isSetCart_ft_cmd() {
    return this.cart_ft_cmd != null;
  }

  public void setCart_ft_cmdIsSet(boolean value) {
    if (!value) {
      this.cart_ft_cmd = null;
    }
  }

  public boolean isStatus() {
    return this.status;
  }

  public RealTimeControlData setStatus(boolean status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case JOINT_POS_CMD:
      if (value == null) {
        unsetJoint_pos_cmd();
      } else {
        setJoint_pos_cmd((java.util.List<java.lang.Double>)value);
      }
      break;

    case JOINT_VEL_CMD:
      if (value == null) {
        unsetJoint_vel_cmd();
      } else {
        setJoint_vel_cmd((java.util.List<java.lang.Double>)value);
      }
      break;

    case JOINT_TORQ_CMD:
      if (value == null) {
        unsetJoint_torq_cmd();
      } else {
        setJoint_torq_cmd((java.util.List<java.lang.Double>)value);
      }
      break;

    case CART_POS_TOOL_WOBJ_CMD:
      if (value == null) {
        unsetCart_pos_tool_wobj_cmd();
      } else {
        setCart_pos_tool_wobj_cmd((java.util.List<java.lang.Double>)value);
      }
      break;

    case CART_VEL_TOOL_WOBJ_CMD:
      if (value == null) {
        unsetCart_vel_tool_wobj_cmd();
      } else {
        setCart_vel_tool_wobj_cmd((java.util.List<java.lang.Double>)value);
      }
      break;

    case CART_FT_CMD:
      if (value == null) {
        unsetCart_ft_cmd();
      } else {
        setCart_ft_cmd((java.util.List<java.lang.Double>)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((java.lang.Boolean)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case JOINT_POS_CMD:
      return getJoint_pos_cmd();

    case JOINT_VEL_CMD:
      return getJoint_vel_cmd();

    case JOINT_TORQ_CMD:
      return getJoint_torq_cmd();

    case CART_POS_TOOL_WOBJ_CMD:
      return getCart_pos_tool_wobj_cmd();

    case CART_VEL_TOOL_WOBJ_CMD:
      return getCart_vel_tool_wobj_cmd();

    case CART_FT_CMD:
      return getCart_ft_cmd();

    case STATUS:
      return isStatus();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case JOINT_POS_CMD:
      return isSetJoint_pos_cmd();
    case JOINT_VEL_CMD:
      return isSetJoint_vel_cmd();
    case JOINT_TORQ_CMD:
      return isSetJoint_torq_cmd();
    case CART_POS_TOOL_WOBJ_CMD:
      return isSetCart_pos_tool_wobj_cmd();
    case CART_VEL_TOOL_WOBJ_CMD:
      return isSetCart_vel_tool_wobj_cmd();
    case CART_FT_CMD:
      return isSetCart_ft_cmd();
    case STATUS:
      return isSetStatus();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof RealTimeControlData)
      return this.equals((RealTimeControlData)that);
    return false;
  }

  public boolean equals(RealTimeControlData that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_joint_pos_cmd = true && this.isSetJoint_pos_cmd();
    boolean that_present_joint_pos_cmd = true && that.isSetJoint_pos_cmd();
    if (this_present_joint_pos_cmd || that_present_joint_pos_cmd) {
      if (!(this_present_joint_pos_cmd && that_present_joint_pos_cmd))
        return false;
      if (!this.joint_pos_cmd.equals(that.joint_pos_cmd))
        return false;
    }

    boolean this_present_joint_vel_cmd = true && this.isSetJoint_vel_cmd();
    boolean that_present_joint_vel_cmd = true && that.isSetJoint_vel_cmd();
    if (this_present_joint_vel_cmd || that_present_joint_vel_cmd) {
      if (!(this_present_joint_vel_cmd && that_present_joint_vel_cmd))
        return false;
      if (!this.joint_vel_cmd.equals(that.joint_vel_cmd))
        return false;
    }

    boolean this_present_joint_torq_cmd = true && this.isSetJoint_torq_cmd();
    boolean that_present_joint_torq_cmd = true && that.isSetJoint_torq_cmd();
    if (this_present_joint_torq_cmd || that_present_joint_torq_cmd) {
      if (!(this_present_joint_torq_cmd && that_present_joint_torq_cmd))
        return false;
      if (!this.joint_torq_cmd.equals(that.joint_torq_cmd))
        return false;
    }

    boolean this_present_cart_pos_tool_wobj_cmd = true && this.isSetCart_pos_tool_wobj_cmd();
    boolean that_present_cart_pos_tool_wobj_cmd = true && that.isSetCart_pos_tool_wobj_cmd();
    if (this_present_cart_pos_tool_wobj_cmd || that_present_cart_pos_tool_wobj_cmd) {
      if (!(this_present_cart_pos_tool_wobj_cmd && that_present_cart_pos_tool_wobj_cmd))
        return false;
      if (!this.cart_pos_tool_wobj_cmd.equals(that.cart_pos_tool_wobj_cmd))
        return false;
    }

    boolean this_present_cart_vel_tool_wobj_cmd = true && this.isSetCart_vel_tool_wobj_cmd();
    boolean that_present_cart_vel_tool_wobj_cmd = true && that.isSetCart_vel_tool_wobj_cmd();
    if (this_present_cart_vel_tool_wobj_cmd || that_present_cart_vel_tool_wobj_cmd) {
      if (!(this_present_cart_vel_tool_wobj_cmd && that_present_cart_vel_tool_wobj_cmd))
        return false;
      if (!this.cart_vel_tool_wobj_cmd.equals(that.cart_vel_tool_wobj_cmd))
        return false;
    }

    boolean this_present_cart_ft_cmd = true && this.isSetCart_ft_cmd();
    boolean that_present_cart_ft_cmd = true && that.isSetCart_ft_cmd();
    if (this_present_cart_ft_cmd || that_present_cart_ft_cmd) {
      if (!(this_present_cart_ft_cmd && that_present_cart_ft_cmd))
        return false;
      if (!this.cart_ft_cmd.equals(that.cart_ft_cmd))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetJoint_pos_cmd()) ? 131071 : 524287);
    if (isSetJoint_pos_cmd())
      hashCode = hashCode * 8191 + joint_pos_cmd.hashCode();

    hashCode = hashCode * 8191 + ((isSetJoint_vel_cmd()) ? 131071 : 524287);
    if (isSetJoint_vel_cmd())
      hashCode = hashCode * 8191 + joint_vel_cmd.hashCode();

    hashCode = hashCode * 8191 + ((isSetJoint_torq_cmd()) ? 131071 : 524287);
    if (isSetJoint_torq_cmd())
      hashCode = hashCode * 8191 + joint_torq_cmd.hashCode();

    hashCode = hashCode * 8191 + ((isSetCart_pos_tool_wobj_cmd()) ? 131071 : 524287);
    if (isSetCart_pos_tool_wobj_cmd())
      hashCode = hashCode * 8191 + cart_pos_tool_wobj_cmd.hashCode();

    hashCode = hashCode * 8191 + ((isSetCart_vel_tool_wobj_cmd()) ? 131071 : 524287);
    if (isSetCart_vel_tool_wobj_cmd())
      hashCode = hashCode * 8191 + cart_vel_tool_wobj_cmd.hashCode();

    hashCode = hashCode * 8191 + ((isSetCart_ft_cmd()) ? 131071 : 524287);
    if (isSetCart_ft_cmd())
      hashCode = hashCode * 8191 + cart_ft_cmd.hashCode();

    hashCode = hashCode * 8191 + ((status) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(RealTimeControlData other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetJoint_pos_cmd()).compareTo(other.isSetJoint_pos_cmd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJoint_pos_cmd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joint_pos_cmd, other.joint_pos_cmd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJoint_vel_cmd()).compareTo(other.isSetJoint_vel_cmd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJoint_vel_cmd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joint_vel_cmd, other.joint_vel_cmd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJoint_torq_cmd()).compareTo(other.isSetJoint_torq_cmd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJoint_torq_cmd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joint_torq_cmd, other.joint_torq_cmd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCart_pos_tool_wobj_cmd()).compareTo(other.isSetCart_pos_tool_wobj_cmd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCart_pos_tool_wobj_cmd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cart_pos_tool_wobj_cmd, other.cart_pos_tool_wobj_cmd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCart_vel_tool_wobj_cmd()).compareTo(other.isSetCart_vel_tool_wobj_cmd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCart_vel_tool_wobj_cmd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cart_vel_tool_wobj_cmd, other.cart_vel_tool_wobj_cmd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCart_ft_cmd()).compareTo(other.isSetCart_ft_cmd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCart_ft_cmd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cart_ft_cmd, other.cart_ft_cmd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("RealTimeControlData(");
    boolean first = true;

    sb.append("joint_pos_cmd:");
    if (this.joint_pos_cmd == null) {
      sb.append("null");
    } else {
      sb.append(this.joint_pos_cmd);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("joint_vel_cmd:");
    if (this.joint_vel_cmd == null) {
      sb.append("null");
    } else {
      sb.append(this.joint_vel_cmd);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("joint_torq_cmd:");
    if (this.joint_torq_cmd == null) {
      sb.append("null");
    } else {
      sb.append(this.joint_torq_cmd);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cart_pos_tool_wobj_cmd:");
    if (this.cart_pos_tool_wobj_cmd == null) {
      sb.append("null");
    } else {
      sb.append(this.cart_pos_tool_wobj_cmd);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cart_vel_tool_wobj_cmd:");
    if (this.cart_vel_tool_wobj_cmd == null) {
      sb.append("null");
    } else {
      sb.append(this.cart_vel_tool_wobj_cmd);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cart_ft_cmd:");
    if (this.cart_ft_cmd == null) {
      sb.append("null");
    } else {
      sb.append(this.cart_ft_cmd);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (joint_pos_cmd == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'joint_pos_cmd' was not present! Struct: " + toString());
    }
    if (joint_vel_cmd == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'joint_vel_cmd' was not present! Struct: " + toString());
    }
    if (joint_torq_cmd == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'joint_torq_cmd' was not present! Struct: " + toString());
    }
    if (cart_pos_tool_wobj_cmd == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'cart_pos_tool_wobj_cmd' was not present! Struct: " + toString());
    }
    if (cart_vel_tool_wobj_cmd == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'cart_vel_tool_wobj_cmd' was not present! Struct: " + toString());
    }
    if (cart_ft_cmd == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'cart_ft_cmd' was not present! Struct: " + toString());
    }
    // alas, we cannot check 'status' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class RealTimeControlDataStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public RealTimeControlDataStandardScheme getScheme() {
      return new RealTimeControlDataStandardScheme();
    }
  }

  private static class RealTimeControlDataStandardScheme extends org.apache.thrift.scheme.StandardScheme<RealTimeControlData> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, RealTimeControlData struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // JOINT_POS_CMD
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list320 = iprot.readListBegin();
                struct.joint_pos_cmd = new java.util.ArrayList<java.lang.Double>(_list320.size);
                double _elem321;
                for (int _i322 = 0; _i322 < _list320.size; ++_i322)
                {
                  _elem321 = iprot.readDouble();
                  struct.joint_pos_cmd.add(_elem321);
                }
                iprot.readListEnd();
              }
              struct.setJoint_pos_cmdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // JOINT_VEL_CMD
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list323 = iprot.readListBegin();
                struct.joint_vel_cmd = new java.util.ArrayList<java.lang.Double>(_list323.size);
                double _elem324;
                for (int _i325 = 0; _i325 < _list323.size; ++_i325)
                {
                  _elem324 = iprot.readDouble();
                  struct.joint_vel_cmd.add(_elem324);
                }
                iprot.readListEnd();
              }
              struct.setJoint_vel_cmdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // JOINT_TORQ_CMD
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list326 = iprot.readListBegin();
                struct.joint_torq_cmd = new java.util.ArrayList<java.lang.Double>(_list326.size);
                double _elem327;
                for (int _i328 = 0; _i328 < _list326.size; ++_i328)
                {
                  _elem327 = iprot.readDouble();
                  struct.joint_torq_cmd.add(_elem327);
                }
                iprot.readListEnd();
              }
              struct.setJoint_torq_cmdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CART_POS_TOOL_WOBJ_CMD
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list329 = iprot.readListBegin();
                struct.cart_pos_tool_wobj_cmd = new java.util.ArrayList<java.lang.Double>(_list329.size);
                double _elem330;
                for (int _i331 = 0; _i331 < _list329.size; ++_i331)
                {
                  _elem330 = iprot.readDouble();
                  struct.cart_pos_tool_wobj_cmd.add(_elem330);
                }
                iprot.readListEnd();
              }
              struct.setCart_pos_tool_wobj_cmdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CART_VEL_TOOL_WOBJ_CMD
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list332 = iprot.readListBegin();
                struct.cart_vel_tool_wobj_cmd = new java.util.ArrayList<java.lang.Double>(_list332.size);
                double _elem333;
                for (int _i334 = 0; _i334 < _list332.size; ++_i334)
                {
                  _elem333 = iprot.readDouble();
                  struct.cart_vel_tool_wobj_cmd.add(_elem333);
                }
                iprot.readListEnd();
              }
              struct.setCart_vel_tool_wobj_cmdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CART_FT_CMD
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list335 = iprot.readListBegin();
                struct.cart_ft_cmd = new java.util.ArrayList<java.lang.Double>(_list335.size);
                double _elem336;
                for (int _i337 = 0; _i337 < _list335.size; ++_i337)
                {
                  _elem336 = iprot.readDouble();
                  struct.cart_ft_cmd.add(_elem336);
                }
                iprot.readListEnd();
              }
              struct.setCart_ft_cmdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.status = iprot.readBool();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetStatus()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'status' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, RealTimeControlData struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.joint_pos_cmd != null) {
        oprot.writeFieldBegin(JOINT_POS_CMD_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, struct.joint_pos_cmd.size()));
          for (double _iter338 : struct.joint_pos_cmd)
          {
            oprot.writeDouble(_iter338);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.joint_vel_cmd != null) {
        oprot.writeFieldBegin(JOINT_VEL_CMD_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, struct.joint_vel_cmd.size()));
          for (double _iter339 : struct.joint_vel_cmd)
          {
            oprot.writeDouble(_iter339);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.joint_torq_cmd != null) {
        oprot.writeFieldBegin(JOINT_TORQ_CMD_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, struct.joint_torq_cmd.size()));
          for (double _iter340 : struct.joint_torq_cmd)
          {
            oprot.writeDouble(_iter340);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.cart_pos_tool_wobj_cmd != null) {
        oprot.writeFieldBegin(CART_POS_TOOL_WOBJ_CMD_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, struct.cart_pos_tool_wobj_cmd.size()));
          for (double _iter341 : struct.cart_pos_tool_wobj_cmd)
          {
            oprot.writeDouble(_iter341);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.cart_vel_tool_wobj_cmd != null) {
        oprot.writeFieldBegin(CART_VEL_TOOL_WOBJ_CMD_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, struct.cart_vel_tool_wobj_cmd.size()));
          for (double _iter342 : struct.cart_vel_tool_wobj_cmd)
          {
            oprot.writeDouble(_iter342);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.cart_ft_cmd != null) {
        oprot.writeFieldBegin(CART_FT_CMD_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, struct.cart_ft_cmd.size()));
          for (double _iter343 : struct.cart_ft_cmd)
          {
            oprot.writeDouble(_iter343);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeBool(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class RealTimeControlDataTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public RealTimeControlDataTupleScheme getScheme() {
      return new RealTimeControlDataTupleScheme();
    }
  }

  private static class RealTimeControlDataTupleScheme extends org.apache.thrift.scheme.TupleScheme<RealTimeControlData> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, RealTimeControlData struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        oprot.writeI32(struct.joint_pos_cmd.size());
        for (double _iter344 : struct.joint_pos_cmd)
        {
          oprot.writeDouble(_iter344);
        }
      }
      {
        oprot.writeI32(struct.joint_vel_cmd.size());
        for (double _iter345 : struct.joint_vel_cmd)
        {
          oprot.writeDouble(_iter345);
        }
      }
      {
        oprot.writeI32(struct.joint_torq_cmd.size());
        for (double _iter346 : struct.joint_torq_cmd)
        {
          oprot.writeDouble(_iter346);
        }
      }
      {
        oprot.writeI32(struct.cart_pos_tool_wobj_cmd.size());
        for (double _iter347 : struct.cart_pos_tool_wobj_cmd)
        {
          oprot.writeDouble(_iter347);
        }
      }
      {
        oprot.writeI32(struct.cart_vel_tool_wobj_cmd.size());
        for (double _iter348 : struct.cart_vel_tool_wobj_cmd)
        {
          oprot.writeDouble(_iter348);
        }
      }
      {
        oprot.writeI32(struct.cart_ft_cmd.size());
        for (double _iter349 : struct.cart_ft_cmd)
        {
          oprot.writeDouble(_iter349);
        }
      }
      oprot.writeBool(struct.status);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, RealTimeControlData struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TList _list350 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, iprot.readI32());
        struct.joint_pos_cmd = new java.util.ArrayList<java.lang.Double>(_list350.size);
        double _elem351;
        for (int _i352 = 0; _i352 < _list350.size; ++_i352)
        {
          _elem351 = iprot.readDouble();
          struct.joint_pos_cmd.add(_elem351);
        }
      }
      struct.setJoint_pos_cmdIsSet(true);
      {
        org.apache.thrift.protocol.TList _list353 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, iprot.readI32());
        struct.joint_vel_cmd = new java.util.ArrayList<java.lang.Double>(_list353.size);
        double _elem354;
        for (int _i355 = 0; _i355 < _list353.size; ++_i355)
        {
          _elem354 = iprot.readDouble();
          struct.joint_vel_cmd.add(_elem354);
        }
      }
      struct.setJoint_vel_cmdIsSet(true);
      {
        org.apache.thrift.protocol.TList _list356 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, iprot.readI32());
        struct.joint_torq_cmd = new java.util.ArrayList<java.lang.Double>(_list356.size);
        double _elem357;
        for (int _i358 = 0; _i358 < _list356.size; ++_i358)
        {
          _elem357 = iprot.readDouble();
          struct.joint_torq_cmd.add(_elem357);
        }
      }
      struct.setJoint_torq_cmdIsSet(true);
      {
        org.apache.thrift.protocol.TList _list359 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, iprot.readI32());
        struct.cart_pos_tool_wobj_cmd = new java.util.ArrayList<java.lang.Double>(_list359.size);
        double _elem360;
        for (int _i361 = 0; _i361 < _list359.size; ++_i361)
        {
          _elem360 = iprot.readDouble();
          struct.cart_pos_tool_wobj_cmd.add(_elem360);
        }
      }
      struct.setCart_pos_tool_wobj_cmdIsSet(true);
      {
        org.apache.thrift.protocol.TList _list362 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, iprot.readI32());
        struct.cart_vel_tool_wobj_cmd = new java.util.ArrayList<java.lang.Double>(_list362.size);
        double _elem363;
        for (int _i364 = 0; _i364 < _list362.size; ++_i364)
        {
          _elem363 = iprot.readDouble();
          struct.cart_vel_tool_wobj_cmd.add(_elem363);
        }
      }
      struct.setCart_vel_tool_wobj_cmdIsSet(true);
      {
        org.apache.thrift.protocol.TList _list365 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.DOUBLE, iprot.readI32());
        struct.cart_ft_cmd = new java.util.ArrayList<java.lang.Double>(_list365.size);
        double _elem366;
        for (int _i367 = 0; _i367 < _list365.size; ++_i367)
        {
          _elem366 = iprot.readDouble();
          struct.cart_ft_cmd.add(_elem366);
        }
      }
      struct.setCart_ft_cmdIsSet(true);
      struct.status = iprot.readBool();
      struct.setStatusIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

